@using Trackity.Models;
@model PaginatedList<Trackity.Models.Expense>

@{
    ViewData["Title"] = "Trackity Expense Tracker";
}

<h1 class="text-center jumbotron">Trackity Expense Tracker</h1>

<p class="">
    <a asp-action="Create">Add New Expense</a>
</p>
<form class="text-right" asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by expense name: <input class="rounded" type="text" name="searchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-info" />
            <button asp-action="Index" class="btn btn-primary">Refresh</button>
        </p>
    </div>
</form>
<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>
                <a class="text-dark" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"><em>Date</em></a>
            </th>
            <th>
                <a class="text-dark" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"><em>Expense Name</em></a>
            </th>
            <th>
                <a class="text-dark" asp-action="Index" asp-route-sortOrder="@ViewData["CostSortParm"]"><em>Cost</em></a>
            </th>
            <th>
                Type
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExpenseType.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ExpenseId" class="text-light">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ExpenseId" class="text-light">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ExpenseId" class="text-light">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-primary @nextDisabled">
    Next
</a>
